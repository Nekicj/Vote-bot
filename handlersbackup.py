import os
from telebot import types
from db import cursor, conn
from config import ADMIN_ID, UPLOAD_FOLDER
from telebot import TeleBot

user_states = {}
candidate_data = {}  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –≤–æ –≤—Ä–µ–º—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è

def start_handlers(bot: TeleBot):

    @bot.message_handler(commands=['start'])
    def main_menu(message):
        user_id = message.from_user.id
        user_states[user_id] = 'main'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_vote = types.KeyboardButton('üó≥Ô∏è –ì–æ–ª–æ—Å–æ–≤–∞—Ç—å')
        btn_admin = types.KeyboardButton('üîí –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å')
        markup.add(btn_vote, btn_admin)
        
        bot.send_message(message.chat.id, 
                         "*üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ!* \n\n"
                         "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", 
                         reply_markup=markup)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    @bot.message_handler(func=lambda message: True)
    def handle_choice_and_vote(message):
        user_id = message.from_user.id
        current_state = user_states.get(user_id, 'main')

        if current_state == 'main':
            if message.text == 'üó≥Ô∏è –ì–æ–ª–æ—Å–æ–≤–∞—Ç—å':
                vote_menu(message)
            elif message.text == 'üîí –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å':
                admin_panel(message)
            else:
                bot.send_message(message.chat.id, "‚ö†Ô∏è *–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.* –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.")

        elif current_state == 'voting':
            username = message.from_user.username
            candidate_text = message.text.strip()
        
            # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª: {candidate_text}")
        
            # –ü—Ä–æ–≤–µ—Ä–∫–∞, –≥–æ–ª–æ—Å–æ–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–Ω–µ–µ
            cursor.execute('SELECT * FROM votes WHERE user_id = ?', (user_id,))
            if cursor.fetchone():
                bot.send_message(message.chat.id, "‚ùå *–í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏!* –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.")
                main_menu(message)
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
                cursor.execute('SELECT * FROM candidates WHERE name = ?', (candidate_text,))
                candidate = cursor.fetchone()
        
                # –ï—Å–ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç –Ω–∞–π–¥–µ–Ω
                if candidate:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –≥–æ–ª–æ—Å –±—ã–ª –ø—Ä–∏–Ω—è—Ç
                    cursor.execute('INSERT INTO votes (user_id, username, candidate) VALUES (?, ?, ?)', 
                                   (user_id, username, candidate_text))
                    conn.commit()
                    bot.send_message(message.chat.id, f"‚úÖ *–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≥–æ–ª–æ—Å!* –í—ã –≤—ã–±—Ä–∞–ª–∏ {candidate_text}.")
                    main_menu(message)
                else:
                    # –ï—Å–ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                    bot.send_message(message.chat.id, "‚ö†Ô∏è *–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.* –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
                    vote_menu(message)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –º–µ–Ω—é –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è


        elif current_state.startswith('adding_'):
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞–≥–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
            if current_state == 'adding_photo':
                process_candidate_photo(message)
            elif current_state == 'adding_name':
                process_candidate_name(message)
            elif current_state == 'adding_description':
                process_candidate_description(message)
            elif current_state == 'adding_link':
                process_candidate_link(message)
            else:
                bot.send_message(message.chat.id, "‚ö†Ô∏è *–ù–µ–≤–µ—Ä–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.*")
                user_states.pop(user_id, None)

        elif current_state == 'admin':
            if message.text == 'üîô –ù–∞–∑–∞–¥':
                main_menu(message)
            elif message.text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞':
                add_candidate(message)
            elif message.text == 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –≥–æ–ª–æ—Å–∞':
                remove_votes(message)
            elif message.text == 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤—Å–µ—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤':
                remove_candidates(message)
            else:
                bot.send_message(message.chat.id, "‚ö†Ô∏è *–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.* –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.")

    def vote_menu(message):
        markup = types.ReplyKeyboardMarkup(row_width=1, one_time_keyboard=True)

        cursor.execute('SELECT name, photo_url FROM candidates')  # –£–¥–∞–ª–µ–Ω gender
        candidates = cursor.fetchall()

        if candidates:
            for candidate, photo_url in candidates:
                markup.add(types.KeyboardButton(candidate))
            
            bot.send_message(message.chat.id, 
                             "*üéâ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:*", 
                             reply_markup=markup)
            user_states[message.from_user.id] = 'voting'
        else:
            bot.send_message(message.chat.id, "‚ùå *–ö–∞–Ω–¥–∏–¥–∞—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!* –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å.")

    def admin_panel(message):
        if message.from_user.id == ADMIN_ID:
            user_states[message.from_user.id] = 'admin'
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_add_candidate = types.KeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞')
            btn_remove_votes = types.KeyboardButton('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –≥–æ–ª–æ—Å–∞')
            btn_remove_candidates = types.KeyboardButton('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤—Å–µ—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤')
            btn_back = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')
            markup.add(btn_add_candidate, btn_remove_votes, btn_remove_candidates, btn_back)

            bot.send_message(message.chat.id, 
                             "üîí *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!*\n\n"
                             "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", 
                             reply_markup=markup)
        else:
            bot.send_message(message.chat.id, "üö´ *–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏!*")

    @bot.message_handler(func=lambda message: message.text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞')
    def add_candidate(message):
        if message.from_user.id == ADMIN_ID:
            user_id = message.from_user.id
            user_states[user_id] = 'adding_photo'
            bot.send_message(message.chat.id, "üìù *–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:*")
        else:
            bot.send_message(message.chat.id, "üö´ *–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤!*")

    def process_candidate_photo(message):
        user_id = message.from_user.id
        if message.content_type == 'photo' and user_states.get(user_id) == 'adding_photo':
            photo_id = message.photo[-1].file_id
            file_info = bot.get_file(photo_id)
            downloaded_file = bot.download_file(file_info.file_path)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –ø–∞–ø–∫—É
            photo_filename = f"{user_id}_{photo_id}.jpg"
            photo_path = os.path.join(UPLOAD_FOLDER, photo_filename)
            with open(photo_path, 'wb') as new_file:
                new_file.write(downloaded_file)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ –≤ —Å–ª–æ–≤–∞—Ä–µ
            candidate_data[user_id] = {'photo_url': photo_path}

            user_states[user_id] = 'adding_name'
            bot.send_message(message.chat.id, "üìù *–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:*")
        else:
            bot.send_message(message.chat.id, "‚ö†Ô∏è *–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∫–∞–Ω–¥–∏–¥–∞—Ç–∞.*")

    def process_candidate_name(message):
        user_id = message.from_user.id
        if user_states.get(user_id) == 'adding_name':
            candidate_name = message.text.strip()
            if not candidate_name:
                bot.send_message(message.chat.id, "‚ö†Ô∏è *–ò–º—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:*")
                return

            candidate_data[user_id]['name'] = candidate_name

            user_states[user_id] = 'adding_description'
            bot.send_message(message.chat.id, "üìñ *–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:*")
        else:
            bot.send_message(message.chat.id, "‚ö†Ô∏è *–ù–µ–≤–µ—Ä–Ω—ã–π —à–∞–≥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –∑–∞–Ω–æ–≤–æ.*")
            user_states.pop(user_id, None)
    
# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—Å—Ç–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å –∫–æ–¥–∞ –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ —Ç–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞


    def process_candidate_description(message):
        user_id = message.from_user.id
        if user_states.get(user_id) == 'adding_description':
            description = message.text.strip()
            candidate_data[user_id]['description'] = description

            user_states[user_id] = 'adding_link'
            bot.send_message(message.chat.id, "üîó *–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–¥–∏–¥–∞—Ç–µ:*")
        else:
            bot.send_message(message.chat.id, "‚ö†Ô∏è *–ù–µ–≤–µ—Ä–Ω—ã–π —à–∞–≥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –∑–∞–Ω–æ–≤–æ.*")
            user_states.pop(user_id, None)

    def process_candidate_link(message):
        user_id = message.from_user.id
        if user_states.get(user_id) == 'adding_link':
            link = message.text.strip()
            candidate_data[user_id]['link'] = link

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            try:
                cursor.execute('''
                    INSERT INTO candidates (name, photo_url, description, link)
                    VALUES (?, ?, ?, ?)
                ''', (
                    candidate_data[user_id]['name'],
                    candidate_data[user_id]['photo_url'],
                    candidate_data[user_id]['description'],
                    candidate_data[user_id]['link']
                ))
                conn.commit()
                bot.send_message(message.chat.id, f"‚úÖ *–ö–∞–Ω–¥–∏–¥–∞—Ç {candidate_data[user_id]['name']} –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!*")
            except Exception as e:
                bot.send_message(message.chat.id, f"‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:* {str(e)}")
            finally:
                # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                user_states.pop(user_id, None)
                candidate_data.pop(user_id, None)
        else:
            bot.send_message(message.chat.id, "‚ö†Ô∏è *–ù–µ–≤–µ—Ä–Ω—ã–π —à–∞–≥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –∑–∞–Ω–æ–≤–æ.*")
            user_states.pop(user_id, None)

    def remove_votes(message):
        if message.from_user.id == ADMIN_ID:
            cursor.execute('DELETE FROM votes')
            conn.commit()
            bot.send_message(message.chat.id, "üóëÔ∏è *–í—Å–µ –≥–æ–ª–æ—Å–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!*")
        else:
            bot.send_message(message.chat.id, "üö´ *–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤!*")

    def remove_candidates(message):
        if message.from_user.id == ADMIN_ID:
            cursor.execute('DELETE FROM candidates')
            conn.commit()
            bot.send_message(message.chat.id, "üóëÔ∏è *–í—Å–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!*")
        else:
            bot.send_message(message.chat.id, "üö´ *–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤!*")

    
    @bot.message_handler(content_types=['photo'])
    def handle_photos(message):
        user_id = message.from_user.id
        state = user_states.get(user_id)

        if state == 'adding_photo':
            process_candidate_photo(message)
        else:
            # –ú–æ–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–ª–∏ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å
            pass

